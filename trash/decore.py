# def fix_encoding(garbled_text):
#     # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∏—Å—Ö–æ–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É –≤ –±–∞–π—Ç—ã (–æ—à–∏–±–æ—á–Ω–æ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ Windows-1252 —Å–∏–º–≤–æ–ª—ã)
#     raw_bytes = garbled_text.encode('latin1')  # 'latin1' = Windows-1252 –±–µ–∑ –æ—à–∏–±–æ–∫
#     # –ß–∏—Ç–∞–µ–º —ç—Ç–∏ –±–∞–π—Ç—ã –∫–∞–∫ Windows-1251
#     fixed_text = raw_bytes.decode('windows-1251')
#     return fixed_text

# # –ü—Ä–∏–º–µ—Ä:
# garbled = "√∞√Ø√§√¥√∑√•√≤√∂√§√•√Æ√©√•: √≥√Ø√Ø√¢√Ω√•√Æ√©√• √£√µ√Æ√°√≠√© √∑√•√∞√°56 √∞√¥√£√£ 240000 √Æ√Ø√≠√•√≤ 013 √∞√Ø√¨√µ√æ√•√Æ√Ø √∑ 000126Z 2406 AUTO RUHB "

# fixed = fix_encoding(garbled)
# print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {fixed}")

#!

# # —Å—Ç—Ä–æ–∫–∞-–∫—Ä–∞–∫–æ–∑—è–±—Ä–∞
# s = "√ê\x9f√ë\x80√ê¬∏√ê¬≤√ê¬µ√ë\x82"

# # 1. –ü–æ–ª—É—á–∞–µ–º –±–∞–π—Ç—ã –∏–∑ —Å—Ç—Ä–æ–∫–∏, —Å—á–∏—Ç–∞—è, —á—Ç–æ –æ–Ω–∞ –±—ã–ª–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–Ω–∞ –∫–∞–∫ windows-1252
# b = s.encode('latin1')  # ‚¨ÖÔ∏è –ª–∞—Ç–∏–Ω1 –±–µ–∑–æ–ø–∞—Å–Ω–æ, 1 –±–∞–π—Ç = 1 —Å–∏–º–≤–æ–ª
# print(b)
# # 2. –î–µ–∫–æ–¥–∏—Ä—É–µ–º –±–∞–π—Ç—ã –∫–∞–∫ UTF-8 (–∫–∞–∫ –∏ –Ω–∞–¥–æ –±—ã–ª–æ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ)
# fixed = b.decode('utf-8')

# print(fixed)  # üëâ –ü—Ä–∏–≤–µ—Ç

# ******

# import encodings
# import codecs

# # –ö—Ä–∞–∫–æ–∑—è–±—Ä–∞
# wtf = "√∑√•√∞√°56√∞√¥√£√£"

# # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–¥–∏—Ä–æ–≤–æ–∫
# all_encodings = sorted(set(encodings.aliases.aliases.values()))

# for enc in all_encodings:
#     try:
#         # encode —á–µ—Ä–µ–∑ latin1 (—á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–∞–π—Ç—ã)
#         b = wtf.encode('latin1')

#         # decode —á–µ—Ä–µ–∑ —Ç–µ–∫—É—â—É—é –∫–æ–¥–∏—Ä–æ–≤–∫—É
#         decoded = b.decode(enc)
#         print(f"[{enc}]: {decoded}")
#     except Exception:
#         # –µ—Å–ª–∏ –∫–æ–¥–∏—Ä–æ–≤–∫–∞ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
#         pass
# ******
import encodings
import pkgutil

# –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –∏–∑ –ø–∞–∫–µ—Ç–∞ encodings
all_encodings = set(
    [modname for _, modname, _ in pkgutil.iter_modules(encodings.__path__)]
)

# –î–æ–±–∞–≤–ª—è–µ–º –∞–ª–∏–∞—Å—ã, —á—Ç–æ–±—ã –Ω–µ —É–ø—É—Å—Ç–∏—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã
import encodings.aliases
all_encodings.update(encodings.aliases.aliases.values())

# –°–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
all_encodings = sorted(all_encodings)

# –ü—Ä–∏–º–µ—Ä: –≤—ã–≤–æ–¥ –≤—Å–µ—Ö –∫–æ–¥–∏—Ä–æ–≤–æ–∫
for enc in all_encodings:
    print(enc)

# –ü—Ä–æ–±–µ–≥–∞–µ–º —á–µ—Ä–µ–∑ –≤—Å–µ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –∫—Ä–∞–∫–æ–∑—è–±—Ä—É
wtf = "√∑√•√∞√°56√∞√¥√£√£"
for enc in all_encodings:
    try:
        # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º –±–∞–π—Ç—ã –∏–∑ –∫—Ä–∞–∫–æ–∑—è–±—Ä—ã —á–µ—Ä–µ–∑ latin1
        b = wtf.encode('latin1')
        # –î–µ–∫–æ–¥–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ —Ç–µ–∫—É—â—É—é –∫–æ–¥–∏—Ä–æ–≤–∫—É
        decoded = b.decode(enc)
        print(f"[{enc}]: {decoded}")
    except Exception:
        pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç —ç—Ç–æ—Ç –±–∞–π—Ç
